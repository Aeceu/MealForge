import os

import google.generativeai as genai

genai.configure(api_key=os.getenv("AI_API_KEY"))
model = genai.GenerativeModel("gemini-1.5-flash")

def generateQuery(main_ingredients,seasonings,servings,serve_hot_or_cold,cuisine_type,difficulty,top_recipe_str,user_preference_str):
  result = model.generate_content(f"""
      Revise the base recipe or create a new recipe that incorporates the following ingredients provided by the user:
        - Main Ingredients: {', '.join(main_ingredients)}
        - Seasonings: {', '.join(seasonings)}
        - Servings: {servings}
        - Serve Hot or Cold: {serve_hot_or_cold}
        - Cuisine Type: {cuisine_type}
        - Difficulty Level: {difficulty}

      Use the recipe generated by NLP as a base, but update it with additional fields and information if it lacks any required attributes.
      If the base recipe, {top_recipe_str}, does not align with the specified user ingredients, create a modified recipe that exactly matches the user input.
      Please make sure to use the following user preferences: {user_preference_str}.
      The output should be in valid JSON format with the following structure:
      {{
        "name": "Title of the recipe, as a string with a maximum length of 250 characters.",
        "ingredients": [
            {{
            "name": "The exact word name of each ingredient from the user-provided input. Don't use comma symbol in name",
            "measurement": "The exact quantity of each ingredient for {servings} servings. Don't use comma symbol in measurements"}}
        ],
        "instructions": [
            "Step 1: Detailed description of the cooking process, breaking down steps clearly and sequentially. Avoid using commas in each step.",
            "Step 2: Continue in a detailed and easy-to-follow format for the recipe preparation process.",
            "...additional steps."
        ],
        "type_of_cuisine": "Cuisine type (e.g., Italian, Mexican), provided as a string with up to 250 characters.",
        "nutrient_counts": [
          {{"name":"The exact word name of nutrients (e.g., calories, carbs, sugar, sodium, protein, saturated, carbohydrates), provided as a string. Don't use comma symbol in name",
            "measurement":"The exact amount of the nutrients for {servings} servings (e.g., 86 calories, 12g carbs) in numbers only. Don't use comma symbol in measurement"}}
        ],
        "serve_hot_or_cold": "Specify if the recipe is best served hot or cold, as a string with up to 50 characters. Only return the word 'Hot' or 'Cold'.",
        "cooking_time": "Integer representing total cooking time in minutes. Only return the number.",
        "benefits": "Optional text noting health benefits, if any.",
        "serve_for": "Number of servings ({servings}). Only return the number.",
        "difficulty": "Difficulty level of cooking the recipe ({difficulty}). Only return whether easy, medium, or hard."
      }}

      Ensure the instructions and steps are clear, sequential, and provided in array format. Nutrient values must include sugar, sodium, protein, saturated fats, and carbohydrates where applicable, and the recipe must exactly align with the user-provided ingredients.
  """)
  return result
