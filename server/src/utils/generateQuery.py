import os

import google.generativeai as genai

genai.configure(api_key=os.getenv("AI_API_KEY"))
model = genai.GenerativeModel("gemini-1.5-flash")

def generateQuery(ingredients,generated_text,server_for):
  response = model.generate_content(f"""
      Create a 5 new world-wide recipe that incorporates the following ingredients provided by the user:
        - Ingredients: {', '.join(ingredients)}
        - Serve for: {server_for} servings

      Use the recipe generated by NLP as a base, but update it with additional fields and information if it lacks any required attributes.
      If the base recipe, {generated_text}, does not align with the specified user ingredients, create a modified recipe that exactly matches the user input.
      The output should be in valid JSON format with the following structure:
      [{{
        "name": "Title of the recipe, as a string with a maximum length of 250 characters. (eg,Spaghetti Carbonara, Chicken Adobo, etc.)",
        "ingredients": [
            {{
                "name": "The exact word name of each ingredient from the user-provided input. Don't use comma symbol in name",
                "measurement": "The exact quantity of each ingredient for given servings. Don't use comma symbol in measurements"
            }}
        ],
        tags: exact word name of tags (e.g., breakfast, lunch, dinner, christmas, thanksgiving, low-diet, vegan), provided as a string. Use comma to separate each tags. Ensure the tags are unique, has seasons and different from each other and has a tags such as "dinner" or "lunch" or "breakfast" or "christmas" or "thanksgiving" or "low-diet" or "vegan".
        "instructions": [
            "Step 1: Detailed first step of the recipe. Don't use comma symbol in each steps",
            "Step 2: Detailed second step of the recipe. Don't use comma symbol in each steps",
            "...additional steps."
        ],
        "type_of_cuisine": "Cuisine type (e.g., Italian, Mexican), provided as a string with up to 250 characters.",
        "nutrient_counts": [
          {{
              "name":"The exact word name of nutrients (e.g., calories,carbs,sugar,fat, vitamins), provided as a string. Don't use comma symbol in name",
              "measurement":"The exact amount of the nutrients for given servings (e.g., 86 g). Don't use comma symbol in measurement"
          }}
        ],
        "serve_hot_or_cold": "Specify if the recipe is best served hot or cold, as a string with up to 50 characters. Only return the word "Hot" or "Cold",
        "cooking_time": "Integer representing total cooking time in minutes. Only return the number",
        "serve_for": "Number of servings given. Only return the number.",
        "difficulty": "Difficulty level of cooking the recipe. Only return wether easy, medium or hard.",
        "allergens": "List of allergens present in the recipe. Only return the allergens present in the recipe. (e.g., peanuts, soy, gluten, etc.)  provided as a string with up to 250 characters.",
      }}]

      Ensure the instructions are provided in a clear step-by-step array format, and that the recipe exactly aligns with the user-provided ingredients and make sure the nutrients and servings are correct. and make sure the recipe is unique and the other preferences are different from each other.
  """)
  print(response)
  return response
